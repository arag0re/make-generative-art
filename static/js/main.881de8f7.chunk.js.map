{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["algorithmKeys","Cryptoblots","HyperHash","Unigrids","Ringers","Sentience","Archetype","Pathfinders","EnergySculpture","Apparitions","Inspirals","Hieroglyphs","Empyrean","Ens≈ç","Gazettes","Synapses","Elementals","CryptoGodKing","Asterisms","Subscapes","Rhythm","Traversals","Petri","Abstraction","Antennas","Andradite","Frammenti","CatBlocks","Return","Fidenza","Incantation","PrimiDance","Stroming","Orthogone","Dreams","Hashtractors","planets","Sigils","Portal","Spaghettification","CENTURY","Enchiridion","Eccentrics","Gizmobotz","Radiance","Divisions","Flowers","Ecumenopolis","Rinascita","Cells","Nucleus","Calendart","Timepiece","Labyrometry","Tangled","Brushpops","Rapture","autoRAD","Neighborhood","Trossets","generateHTML","algorithm","randomSeed","Math","floor","random","randomSeedString","ethers","hexlify","hash","keccak256","hashes","App","React","useState","loaded","setLoaded","initAlgorithm","setAlgorithm","console","log","initImageHTML","imageHTML","setImageHTML","getKeyValue","key","obj","Container","fluid","Row","Spinner","animation","role","title","width","height","srcDoc","scrolling","frameBorder","allowFullScreen","sandbox","allow","onLoad","Col","Button","variant","onClick","DropdownButton","id","Object","keys","map","Dropdown","Item","as","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.881de8f7.chunk.js","sourcesContent":["import React from \"react\";\nimport * as ethers from \"ethers\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Button from \"react-bootstrap/Button\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./App.css\";\n\nlet algorithmKeys = {\n\t\"Chromie Squiggle\": \"chromie_squiggle.js\",\n\tCryptoblots: \"cryptoblots.js\",\n\t\"Dynamic Slices\": \"dynamic_slices.js\",\n\t\"Variant Plan\": \"variant_plan.js\",\n\t\"View Card\": \"view_card.js\",\n\t\"Elevated Deconstructions\": \"elevated_deconstructions.js\",\n\tHyperHash: \"hyperhash.js\",\n\tUnigrids: \"unigrids.js\",\n\tRingers: \"ringers.js\",\n\t\"Cyber Cities\": \"cyber_cities.js\",\n\t\"Color Study\": \"color_study.js\",\n\t\"Gen 2\": \"gen_2.js\",\n\tSentience: \"sentience.js\",\n\tArchetype: \"archetype.js\",\n\tPathfinders: \"pathfinders.js\",\n\tEnergySculpture: \"energysculpture.js\",\n\tApparitions: \"apparitions.js\",\n\tInspirals: \"inspirals.js\",\n\tHieroglyphs: \"hieroglyphs.js\",\n\tEmpyrean: \"empyrean.js\",\n\tEns≈ç: \"ens≈ç.js\",\n\t\"Aerial View\": \"aerial_view.js\",\n\tGazettes: \"gazettes.js\",\n\t\"Paper Armada\": \"paper_armada.js\",\n\tSynapses: \"synapses.js\",\n\tElementals: \"elementals.js\",\n\t\"Origami Dream\": \"origami_dream.js\",\n\tCryptoGodKing: \"cryptogodking.js\",\n\t\"Gravity Grid\": \"gravity_grid.js\",\n\tAsterisms: \"asterisms.js\",\n\t\"Gen 3\": \"gen_3.js\",\n\t\"Dear Hash,\": \"dear_hash,.js\",\n\t\"The Opera\": \"the_opera.js\",\n\t\"Stipple Sunsets\": \"stipple_sunsets.js\",\n\t\"Star Flower\": \"star_flower.js\",\n\tSubscapes: \"subscapes.js\",\n\t\"Talking Blocks\": \"talking_blocks.js\",\n\tRhythm: \"rhythm.js\",\n\t\"Color Magic Planets\": \"color_magic_planets.js\",\n\t\"Watercolor Dreams\": \"watercolor_dreams.js\",\n\t\"Event Horizon Sunset (Series C)\": \"event_horizon_sunset_(series_c).js\",\n\t\"Ode to Roy\": \"ode_to_roy.js\",\n\tTraversals: \"traversals.js\",\n\t\"Patchwork Saguaros\": \"patchwork_saguaros.js\",\n\tPetri: \"petri.js\",\n\tAbstraction: \"abstraction.js\",\n\tAntennas: \"antennas.js\",\n\tAndradite: \"andradite.js\",\n\tFrammenti: \"frammenti.js\",\n\tCatBlocks: \"catblocks.js\",\n\t\"The Blocks of Art\": \"the_blocks_of_art.js\",\n\t\"Breathe You\": \"breathe_you.js\",\n\tReturn: \"return.js\",\n\tFidenza: \"fidenza.js\",\n\t\"Space Debris [m'aider]\": \"space_debris_[m'aider].js\",\n\t\"Space Debris [warning]\": \"space_debris_[warning].js\",\n\t\"Space Debris [ravaged]\": \"space_debris_[ravaged].js\",\n\tIncantation: \"incantation.js\",\n\t\"Panelscape üÖ∞üÖ±\": \"panelscape_üÖ∞üÖ±.js\",\n\tPrimiDance: \"primidance.js\",\n\t\"70s Pop Series Two\": \"70s_pop_series_two.js\",\n\tStroming: \"stroming.js\",\n\t\"Patterns of Life\": \"patterns_of_life.js\",\n\tOrthogone: \"orthogone.js\",\n\tDreams: \"dreams.js\",\n\tHashtractors: \"hashtractors.js\",\n\tplanets: \"planets.js\",\n\t\"Libertad Parametrizada\": \"libertad_parametrizada.js\",\n\tSigils: \"sigils.js\",\n\tPortal: \"portal.js\",\n\t\"Gravity 12\": \"gravity_12.js\",\n\t\"[Dis]entanglement\": \"[dis]entanglement.js\",\n\t\"sail-o-bots\": \"sail-o-bots.js\",\n\tSpaghettification: \"spaghettification.js\",\n\tCENTURY: \"century.js\",\n\tEnchiridion: \"enchiridion.js\",\n\t\"I Saw It in a Dream\": \"i_saw_it_in_a_dream.js\",\n\t\"Octo Garden\": \"octo_garden.js\",\n\tEccentrics: \"eccentrics.js\",\n\tGizmobotz: \"gizmobotz.js\",\n\tRadiance: \"radiance.js\",\n\t\"Low Tide\": \"low_tide.js\",\n\tDivisions: \"divisions.js\",\n\t\"Speckled Summits\": \"speckled_summits.js\",\n\t\"70s Pop Ghost Bonus Pack üëª\": \"70s_pop_ghost_bonus_pack_üëª.js\",\n\t\"Alien Clock\": \"alien_clock.js\",\n\t\"glitch crystal monsters\": \"glitch_crystal_monsters.js\",\n\t\"Dot Grid\": \"dot_grid.js\",\n\tFlowers: \"flowers.js\",\n\t\"LeWitt Generator Generator\": \"lewitt_generator_generator.js\",\n\tEcumenopolis: \"ecumenopolis.js\",\n\tRinascita: \"rinascita.js\",\n\tCells: \"cells.js\",\n\tNucleus: \"nucleus.js\",\n\tCalendart: \"calendart.js\",\n\tTimepiece: \"timepiece.js\",\n\tLabyrometry: \"labyrometry.js\",\n\t\"Scribbled Boundaries\": \"scribbled_boundaries.js\",\n\tTangled: \"tangled.js\",\n\t\"Organized Disruption\": \"organized_disruption.js\",\n\t\"Wave Schematics\": \"wave_schematics.js\",\n\tBrushpops: \"brushpops.js\",\n\t\"Alien Insects\": \"alien_insects.js\",\n\t\"Good Vibrations\": \"good_vibrations.js\",\n\tRapture: \"rapture.js\",\n\t\"Unknown Signals\": \"unknown_signals.js\",\n\tautoRAD: \"autorad.js\",\n\tNeighborhood: \"neighborhood.js\",\n\tTrossets: \"trossets.js\",\n\t\"Dot Matrix Gradient Study\": \"dot_matrix_gradient_study.js\",\n\t\"High Tide\": \"high_tide.js\",\n\t\"Fake Internet Money\": \"fake_internet_money.js\",\n};\n\nfunction generateHTML(algorithm: string) {\n\tlet randomSeed = Math.floor(Math.random() * 10000000000000);\n\tlet randomSeedString = ethers.utils.hexlify(randomSeed);\n\n\tlet hash = ethers.utils.keccak256(randomSeedString);\n\tlet hashes = ethers.utils.keccak256(randomSeedString);\n\n\tlet rawHTML = `<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t<meta charset=\"UTF-8\" />\n\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t<title>Document</title>\n\t<script src=\"https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\"></script>\n\t</head>\n\n\t<body></body>\n\t<script>\n\t\tlet tokenData = {\n\t\t\thash: \"${hash}\",\n\t\t\thashes: [\"${hashes}\"],\n\t\t};\n\t</script>\n\t<script src=\"algorithms/${algorithm}\"></script>\n</html>\n\t`;\n\n\treturn rawHTML;\n}\n\nfunction App() {\n\tconst [loaded, setLoaded] = React.useState(0);\n\n\tlet initAlgorithm = algorithmKeys[\"Chromie Squiggle\"];\n\tconst [algorithm, setAlgorithm] = React.useState(initAlgorithm);\n\n\tconsole.log(algorithm);\n\n\tlet initImageHTML = generateHTML(algorithm);\n\tconst [imageHTML, setImageHTML] = React.useState(initImageHTML);\n\n\tconst getKeyValue = (key: any) => (obj: any) => obj[key];\n\n\treturn (\n\t\t<Container fluid>\n\t\t\t<Row>\n\t\t\t\t{!loaded ? <Spinner animation=\"border\" role=\"status\"></Spinner> : null}\n\t\t\t\t<iframe\n\t\t\t\t\ttitle=\"ArtBlocks\"\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\theight=\"600\"\n\t\t\t\t\tsrcDoc={imageHTML}\n\t\t\t\t\tscrolling=\"no\"\n\t\t\t\t\tframeBorder={0}\n\t\t\t\t\tallowFullScreen\n\t\t\t\t\tsandbox=\"allow-scripts\"\n\t\t\t\t\tallow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n\t\t\t\t\tonLoad={() => setLoaded(1)}\n\t\t\t\t></iframe>\n\t\t\t</Row>\n\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\tonClick={() => setImageHTML(generateHTML(algorithm))}\n\t\t\t\t\t>\n\t\t\t\t\t\tGenerate\n\t\t\t\t\t</Button>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<DropdownButton id=\"dropdown-item-button\" title=\"Pick Algorithm\">\n\t\t\t\t\t\t{Object.keys(algorithmKeys).map((key) => (\n\t\t\t\t\t\t\t<Dropdown.Item\n\t\t\t\t\t\t\t\tas=\"button\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsetAlgorithm(getKeyValue(key)(algorithmKeys));\n\t\t\t\t\t\t\t\t\tsetImageHTML(generateHTML(getKeyValue(key)(algorithmKeys)));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{key}\n\t\t\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</DropdownButton>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}