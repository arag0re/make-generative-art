{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["generateHTML","randomSeed","Math","floor","random","randomSeedString","ethers","hexlify","hash","keccak256","hashes","App","React","useState","loaded","setLoaded","Spinner","animation","role","title","width","height","srcDoc","scrolling","frameBorder","allowFullScreen","sandbox","allow","onLoad","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAOA,SAASA,IACR,IAAIC,EAAaC,KAAKC,MAAsB,KAAhBD,KAAKE,UAC7BC,EAAmBC,IAAaC,QAAQN,GAExCO,EAAOF,IAAaG,UAAUJ,GAC9BK,EAAS,CAACJ,IAAaG,UAAUJ,IAwBrC,MAtBW,mbAcAG,EAdA,8BAeEE,EAfF,sFA+CGC,MAtBf,WAAgB,IAAD,EACcC,IAAMC,SAAS,GAD7B,mBACPC,EADO,KACCC,EADD,KAGd,OACC,gCACGD,EAAgE,KAAvD,cAACE,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,WAC5C,wBACCC,MAAM,YACNC,MAAM,OACNC,OAAO,MACPC,OAAQtB,IACRuB,UAAU,KACVC,YAAa,EACbC,iBAAe,EACfC,QAAQ,gBACRC,MAAM,0EACNC,OAAQ,kBAAMb,EAAU,UCzCbc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.770984d7.chunk.js","sourcesContent":["import React from \"react\";\nimport * as ethers from \"ethers\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./App.css\";\n\nfunction generateHTML() {\n\tlet randomSeed = Math.floor(Math.random() * 10000000000000);\n\tlet randomSeedString = ethers.utils.hexlify(randomSeed);\n\n\tlet hash = ethers.utils.keccak256(randomSeedString);\n\tlet hashes = [ethers.utils.keccak256(randomSeedString)];\n\n\tlet rawHTML = `\n  <!DOCTYPE html>\n  <html lang=\"en\">\n    <head>\n      <meta charset=\"UTF-8\" />\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      <title>Document</title>\n      <script src=\"https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\"></script>\n    </head>\n  \n    <body></body>\n    <script>\n\t\tlet tokenData = {\n\t\t\thash: \"${hash}\",\n\t\t\thashes: \"${hashes}\",\n\t\t};\n\t  </script>\n    <script src=\"fidenza.js\"></script>\n  </html>\n  `;\n\n\treturn rawHTML;\n}\n\nfunction App() {\n\tconst [loaded, setLoaded] = React.useState(0);\n\n\treturn (\n\t\t<div>\n\t\t\t{!loaded ? <Spinner animation=\"border\" role=\"status\"></Spinner> : null}\n\t\t\t<iframe\n\t\t\t\ttitle=\"ArtBlocks\"\n\t\t\t\twidth=\"100%\"\n\t\t\t\theight=\"600\"\n\t\t\t\tsrcDoc={generateHTML()}\n\t\t\t\tscrolling=\"no\"\n\t\t\t\tframeBorder={0}\n\t\t\t\tallowFullScreen\n\t\t\t\tsandbox=\"allow-scripts\"\n\t\t\t\tallow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n\t\t\t\tonLoad={() => setLoaded(1)}\n\t\t\t></iframe>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}